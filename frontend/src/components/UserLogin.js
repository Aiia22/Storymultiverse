import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

// ******* Import style ****/
import "../styles/CSS/login.css";

// **** import axios *************/  ==> for DB data retrieval
import userData from "../data/userData.json"; // ==> using local data until DB fixed

const UserLogin = () => {
  const navigate = useNavigate();
  const [userForm, setUserForm] = useState({
    userEmail: "",
    password: "",
  });

  const { userEmail, password } = userForm;

  const handleFormChange = (e) => {
    const { name, value } = e.target;
    setUserForm((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  //********* logic that use Database data *********************/

  // const handleFormSubmit = async (e) => {
  //   e.preventDefault();
  //   try {
  //     const response = await axios.post(
  //       "http://localhost:3000/api/users/login",
  //       {
  //         userEmail,
  //         password,
  //       }
  //     );

  //     const { authToken } = response.data;

  //     if (authToken) {
  //       localStorage.setItem("authToken", authToken);
  //       navigate("/my-search");
  //     }
  //   } catch (error) {
  //     let errorMessage = "The Login failed. Please make sure you enter valid credentials.";
  //     if (
  //       error &&
  //       error.response &&
  //       error.response.data &&
  //       error.response.data.error
  //     ) {
  //       console.error("User Login Error:", error.response.data.error);
  //     } else {
  //       console.error("User Login Error:", error);
  //     }
  //     alert(errorMesssage);
  //     setUserForm({ userEmail: "", password: "" });
  //   }
  // };

  // const handlePasswordReset = async () => {
  //   try {
  //     // ==> Request Password Reset
  //     await axios.post(
  //       "http://localhost:3000/api/users/request-password-reset",
  //       { userEmail }
  //     );
  //     alert(
  //       "The reset link for your password has been sent to your email."
  //     );
  //   } catch (error) {
  //     console.error("Reset user password Error:", error.response.data.error);
  //     alert(
  //       "Failed to send password reset link. Please make sure you entered a valid registered email."
  //     );
  //   }
  // };

  //********* logic that use the json *********************/

  const handleFormSubmit = (e) => {
    e.preventDefault();
    //===>  Simulate post request auth by looking for user credential inside JSON data
    const userObject = userData.find(
      (user) => user.userEmail === userEmail && user.password === password
    );

    if (userObject) {
      // ===> mock accessToken which should be generated by res
      const authToken = "simulate-access-token";
      sessionStorage.setItem("authToken", authToken);
      navigate("/my-search");
    } else {
      const errorMessage =
        "Login failed, please verify your email or password.";
      console.error(errorMessage);
      alert(errorMessage);
      setUserForm({ userEmail: "", password: "" });
    }
  };

  const handlePasswordReset = () => {
    alert(
      "This functionality not available at the moment. our Dev Team is working hard to bring it back online "
    );
  };

  return (
    <div className="login-container">
      <div className="heading-login">
        <h2>Sign in to your account</h2>
      </div>
      <form onSubmit={handleFormSubmit}>
        <div className="form-group">
          <label htmlFor="userEmail">Email:</label>
          <input
            type="email"
            id="userEmail"
            name="userEmail"
            value={userEmail}
            onChange={handleFormChange}
            required
          />
        </div>
        <div className="form-group">
          <label htmlFor="password">Password:</label>
          <input
            type="password"
            id="password"
            name="password"
            value={password}
            onChange={handleFormChange}
            required
          />
        </div>
        <button className="logBtn" type="submit">
          Login
        </button>
        <button className="logBtn" onClick={handlePasswordReset} type="button">
          Forgot Password?
        </button>
      </form>
      <p>
        Not a member yet? <a href="/register">Create an account</a>
      </p>
    </div>
  );
};

export default UserLogin;
